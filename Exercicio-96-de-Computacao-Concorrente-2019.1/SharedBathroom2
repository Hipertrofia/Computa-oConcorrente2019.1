import java.util.concurrent.atomic.AtomicInteger;

public class SharedBathroom2 {
    private Object condition = new Object();

    private AtomicInteger atual = new AtomicInteger(0);
    private AtomicInteger cont = new AtomicInteger(0);

    private void lock() {
        int pass = cont.getAndIncrement();

        while (pass != atual.get()) {
            synchronized (condition) {
                try { 
                	condition.wait(); 
                } catch (InterruptedException ie) {}
            }
        }
    }

    private void unlock() {
    	atual.getAndIncrement();
        synchronized (condition) {
            condition.notifyAll();
        }
    }
    
    public void enterMale() {
        lock();
    }

    public void leaveMale() {
        unlock();
    }

    public void enterFemale() {
        lock();
    }

    public void leaveFemale() {
        unlock();
    }
}
